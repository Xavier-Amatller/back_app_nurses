security:
    # Configuración de los hashers de contraseñas
    password_hashers:
        App\Entity\Auxiliar:
            algorithm: auto # Usa bcrypt o argon2i automáticamente según lo disponible

    # Proveedor de usuarios basado en la entidad Auxiliar
    providers:
        auxiliares:
            entity:
                class: App\Entity\Auxiliar
                property: aux_num_trabajador # Campo usado como identificador (coincide con getUserIdentifier)

    # Configuración de los firewalls
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false # Desactiva seguridad para herramientas de desarrollo
        api:
            pattern: ^/api
            stateless: true # Autenticación sin estado (ideal para JWT)
            provider: auxiliares # Usa el proveedor definido arriba
            jwt: ~ # Habilita el autenticador JWT
        main:
            lazy: true
            provider: auxiliares # Por si necesitas autenticación en otras partes fuera de /api

    # Control de acceso
    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS } # Permitir acceso público al login
        - { path: ^/api, roles: ROLE_AUXILIAR } # Proteger todas las rutas /api con el rol ROLE_AUXILIAR

# Configuración específica para el entorno de pruebas
when@test:
    security:
        password_hashers:
            App\Entity\Auxiliar:
                algorithm: auto
                cost: 4 # Valor mínimo para bcrypt en pruebas
                time_cost: 3 # Valor mínimo para argon en pruebas
                memory_cost: 10 # Valor mínimo para argon en pruebas